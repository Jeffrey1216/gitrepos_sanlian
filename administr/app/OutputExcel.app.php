<?php
class OutputExcelApp extends BackendApp
{
    var $_goods_mod;
    var $_gcategory_mod;

    function __construct()
    {
        $this->OutputExcelApp();
    }

    function OutputExcelApp()
    {
        parent::__construct();
        $this->_goods_mod =& m('goods');
        $this->_gcategory_mod =& bm('gcategory');
    }
    function index()
    {
    	$conditions = " where 1=1 ";
    	// 分类
        $cate_id = empty($_GET['cate_id']) ? 0 : intval($_GET['cate_id']);
        if ($cate_id > 0)
        {
            
            $cate_ids = $this->_gcategory_mod->get_descendant_ids($cate_id);
            $conditions .= " AND g.cate_id" . db_create_in($cate_ids);
        }   	
    	$page = $this->get_pages(500);
    	$limit = " limit ".$page['limit'];
    	$param = "SELECT g.goods_name,g.buy_name,g.unit,g.cate_name,gc.spec_1,gc.spec_2,g.spec_name_1,g.spec_name_2,gc.commodity_code,gc.price,gc.gprice,gc.profit,gc.credit,gc.zprice,s.mobile,s.address,s.supply_name,s.linkman FROM pa_goods g 
				left join pa_goods_spec gc on gc.goods_id=g.goods_id 
				left join pa_supply_goods sg on sg.goods_id=g.goods_id 
				LEFT join pa_supply s on s.supply_id = sg.supply_id";
    	$sql = $param.$conditions.$limit;
    	$count_sql = "SELECT count(*) FROM pa_goods g 
				left join pa_goods_spec gc on gc.goods_id=g.goods_id 
				left join pa_supply_goods sg on sg.goods_id=g.goods_id 
				LEFT join pa_supply s on s.supply_id = sg.supply_id";
    	$good_count = $this->_goods_mod->getRow($count_sql.$conditions);
    	$page['item_count'] = $good_count['count(*)']; 
    	$this->_format_page($page);
    	$goods_info = $this->_goods_mod->getAll($sql);
		if ($_GET['output'] == 'true')
		{
		    $this->GoodsinfoExcel($goods_info);
		    exit;	
		}
		// 第一级分类
        $this->assign('gcategories', $this->_gcategory_mod->get_all_options(0));
        $this->import_resource(array('script' => 'mlselection.js,inline_edit.js'));
		$this->assign('goods',$goods_info);
		$this->assign('page_info', $page);
		$this->assign('cate_id',$cate_id);
    	$this->display('OutputExcel.index.html');	
    }    
	function GoodsinfoExcel($info)
    {
    	if (count($info) > 500)
    	{
    		$this->show_warning("导出数据不能大于500条");
    		return ;
    	}
    	import(PHPExcel);
    	$objExcel = new PHPExcel();
    	$objWriter = new PHPExcel_Writer_Excel5($objExcel);
		//设置文档基本属性  
		$objProps = $objExcel->getProperties();  
		$objProps->setCreator("小 鱼");  
		$objProps->setLastModifiedBy("小 鱼");  
		$objProps->setTitle("新建文档");  
		$objProps->setSubject("Office XLS Test Document, Demo");  
		$objProps->setDescription("Test document, generated by PHPExcel.");  
		$objProps->setKeywords("office excel PHPExcel");  
		$objProps->setCategory("Test");  
		  
		//*************************************  
		//设置当前的sheet索引，用于后续的内容操作。  
		//一般只有在使用多个sheet的时候才需要显示调用。  
		//缺省情况下，PHPExcel会自动创建第一个sheet被设置SheetIndex=0  
		$objExcel->setActiveSheetIndex(0);  
		  
		  
		$objActSheet = $objExcel->getActiveSheet();  
		  
		//设置当前活动sheet的名称  
		$objActSheet->setTitle('new');  
		  
		//*************************************  
		//设置单元格内容  
		//  
		//由PHPExcel根据传入内容自动判断单元格内容类型  
		$objActSheet->setCellValue('A1',iconv('gbk', 'utf-8', '类别'));  // 字符串内容  
		$objActSheet->setCellValue('B1',iconv('gbk', 'utf-8', '商品名称'));  // 字符串内容  
		$objActSheet->setCellValue('C1',iconv('gbk', 'utf-8', '销售名称'));
		$objActSheet->setCellValue('D1',iconv('gbk', 'utf-8', '单位'));
		$objActSheet->setCellValue('E1',iconv('gbk', 'utf-8', '规格'));
		$objActSheet->setCellValue('F1',iconv('gbk', 'utf-8', '商品条码'));
		$objActSheet->setCellValue('G1',iconv('gbk', 'utf-8', '供应价'));
		$objActSheet->setCellValue('H1',iconv('gbk', 'utf-8', '派啦价'));
		$objActSheet->setCellValue('I1',iconv('gbk', 'utf-8', '利润'));
		$objActSheet->setCellValue('J1',iconv('gbk', 'utf-8', '赠送PL'));
		$objActSheet->setCellValue('K1',iconv('gbk', 'utf-8', '批发价'));
		$objActSheet->setCellValue('L1',iconv('gbk', 'utf-8', '供应商名称'));
		$objActSheet->setCellValue('M1',iconv('gbk', 'utf-8', '供应商联系人'));
		$objActSheet->setCellValue('N1',iconv('gbk', 'utf-8', '供应商联系方式'));
		$objActSheet->setCellValue('O1',iconv('gbk', 'utf-8', '供应商地址'));
		foreach ($info as $k => $v)
		{
			$unit_name = array(
				'1'  => '本',
				'2'  => '个',
				'3'  => '堆',
				'4'  => '件',
				'5'  => '瓶',
				'6'  => '箱',
				'7'  => '台',
				'8'  => '辆',
				'9'  => '公斤',
				'10' => '斤',
				'11' => '千克',
				'12' => '克',
			);
			$key1=1;
    		$key2+=$key1;
    		$k = $key2 +1;
    		$objActSheet->setCellValue('A'.$k,iconv('gbk', 'utf-8', $v['cate_name']));  // 字符串内容  
			$objActSheet->setCellValue('B'.$k,iconv('gbk', 'utf-8', $v['goods_name']));  
			$objActSheet->setCellValue('C'.$k,iconv('gbk', 'utf-8', $v['buy_name']));
			$objActSheet->setCellValue('D'.$k,iconv('gbk', 'utf-8', $unit_name[$v['unit']]));
			$objActSheet->setCellValue('E'.$k,iconv('gbk', 'utf-8', $v['spec_1']."|".$v['spec_2']));
			$objActSheet->setCellValueExplicit('F'.$k,iconv('gbk', 'utf-8', $v['commodity_code']),PHPExcel_Cell_DataType::TYPE_STRING);
			$objActSheet->setCellValue('G'.$k,iconv('gbk', 'utf-8', $v['gprice']));
			$objActSheet->setCellValue('H'.$k,iconv('gbk', 'utf-8', $v['price']));
			$objActSheet->setCellValue('I'.$k,iconv('gbk', 'utf-8', $v['profit']));
			$objActSheet->setCellValue('J'.$k,iconv('gbk', 'utf-8', $v['credit']));
			$objActSheet->setCellValue('K'.$k,iconv('gbk', 'utf-8', $v['zprice']));
			$objActSheet->setCellValue('L'.$k,iconv('gbk', 'utf-8', $v['supply_name']));
			$objActSheet->setCellValue('M'.$k,iconv('gbk', 'utf-8', $v['linkman']));
			$objActSheet->setCellValueExplicit('N'.$k,iconv('gbk', 'utf-8', $v['mobile']),PHPExcel_Cell_DataType::TYPE_STRING);
			$objActSheet->setCellValue('O'.$k,iconv('gbk', 'utf-8', $v['address']));
			
		}
		//显式指定内容类型  
		//$objActSheet->setCellValueExplicit('A5', '847475847857487584',PHPExcel_Cell_DataType::TYPE_STRING);  		  
		//合并单元格  
		//$objActSheet->mergeCells('B1:C22');  
		//分离单元格  
		//$objActSheet->unmergeCells('B1:C22');  
		//*************************************  
		//设置单元格样式  
		//设置宽度  
		//$objActSheet->getColumnDimension('B')->setAutoSize(true);  
		$objActSheet->getColumnDimension('A')->setWidth(35);
		$objActSheet->getColumnDimension('B')->setWidth(35);
		$objActSheet->getColumnDimension('C')->setWidth(35); 
		$objActSheet->getColumnDimension('D')->setWidth(8); 
		$objActSheet->getColumnDimension('E')->setWidth(24); 
		$objActSheet->getColumnDimension('F')->setWidth(24); 
		$objActSheet->getColumnDimension('G')->setWidth(8); 
		$objActSheet->getColumnDimension('H')->setWidth(8);    
		$objActSheet->getColumnDimension('I')->setWidth(8); 
		$objActSheet->getColumnDimension('J')->setWidth(8); 
		$objActSheet->getColumnDimension('K')->setWidth(12);
		$objActSheet->getColumnDimension('L')->setWidth(40); 
		$objActSheet->getColumnDimension('M')->setWidth(20);
		$objActSheet->getColumnDimension('N')->setWidth(20);
		$objActSheet->getColumnDimension('O')->setWidth(40);   
		$objStyleA1 = $objActSheet->getStyle('A1');  
		  
		//设置单元格内容的数字格式。  
		//  
		//如果使用了 PHPExcel_Writer_Excel5 来生成内容的话，  
		//这里需要注意，在 PHPExcel_Style_NumberFormat 类的 const 变量定义的  
		//各种自定义格式化方式中，其它类型都可以正常使用，但当setFormatCode  
		//为 FORMAT_NUMBER 的时候，实际出来的效果被没有把格式设置为"0"。需要  
		//修改 PHPExcel_Writer_Excel5_Format 类源代码中的 getXf($style) 方法，  
		//在 if ($this->_BIFF_version == 0x0500) { （第363行附近）前面增加一  
		//行代码:   
		//if($ifmt === '0') $ifmt = 1;  
		//  
		//设置格式为PHPExcel_Style_NumberFormat::FORMAT_NUMBER，避免某些大数字  
		//被使用科学记数方式显示，配合下面的 setAutoSize 方法可以让每一行的内容  
		//都按原始内容全部显示出来。  
		$objStyleA1  
		    ->getNumberFormat()  
		    ->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_NUMBER);  
		  
		//设置字体  
		$objFontA1 = $objStyleA1->getFont();  
		$objFontA1->setName('Courier New');  
		$objFontA1->setSize(14);  
		$objFontA1->setBold(true);  
		$objFontA1->setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLE);  
		$objFontA1->getColor()->setARGB('FF999999');  
		  
		//设置对齐方式  
		$objAlignA1 = $objStyleA1->getAlignment();  
		$objAlignA1->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);  
		$objAlignA1->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);  
		  
		//设置边框  
		$objBorderA1 = $objStyleA1->getBorders();  
		$objBorderA1->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  
		$objBorderA1->getTop()->getColor()->setARGB('FFFF0000'); // color  
		$objBorderA1->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  
		$objBorderA1->getLeft()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN); 

		$objBorderA1->getRight()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  
		  
		//设置填充颜色  
		$objFillA1 = $objStyleA1->getFill();  
		$objFillA1->setFillType(PHPExcel_Style_Fill::FILL_SOLID);  
		$objFillA1->getStartColor()->setARGB('FFEEEEEE');  
		  
		//从指定的单元格复制样式信息.  
		$objActSheet->duplicateStyle($objStyleA1, 'B1:O1');  	
		//*************************************  
		  
		  
		//添加一个新的worksheet  
		//$objExcel->createSheet();  
		//$objExcel->getSheet(1)->setTitle('测试2');  
 
		//保护单元格  
		//$objExcel->getSheet(1)->getProtection()->setSheet(true);  
		//$objExcel->getSheet(1)->protectCells('A1:C22', 'PHPExcel');  	  
		//*************************************  
		//输出内容  

		$outputFileName = date('Y-m-d H:m:s')."商品审核".".xls";  
		//到文件  
		//$objWriter->save($outputFileName);  
		//or  
		//到浏览器  
		header("Content-Type: application/force-download");  
		header("Content-Type: application/octet-stream");  
		header("Content-Type: application/download");  
		header('Content-Disposition:inline;filename="'.$outputFileName.'"');  
		//header("Content-Transfer-Encoding: binary");  
		//header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");  
		header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");  
		header("Cache-Control: must-revalidate, post-check=0, pre-check=0");  
		header("Pragma: no-cache");  
		$objWriter->save('php://output');  
    }
}














?>